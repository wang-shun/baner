package org.inn.baner.persist.mapper;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import org.inn.baner.bean.AcFlow;
import org.inn.baner.bean.AcFlowExample;

public interface AcFlowMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ac_flow
     *
     * @mbggenerated
     */
    @SelectProvider(type=AcFlowSqlProvider.class, method="countByExample")
    int countByExample(AcFlowExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ac_flow
     *
     * @mbggenerated
     */
    @DeleteProvider(type=AcFlowSqlProvider.class, method="deleteByExample")
    int deleteByExample(AcFlowExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ac_flow
     *
     * @mbggenerated
     */
    @Delete({
        "delete from ac_flow",
        "where platflow = #{platflow,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String platflow);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ac_flow
     *
     * @mbggenerated
     */
    @Insert({
        "insert into ac_flow (platflow, acno, ",
        "ownerid, ownername, ",
        "amount, trantype, outflowno, ",
        "fromsysid, ccy, stat, ",
        "createtime, updatetime, ",
        "remark)",
        "values (#{platflow,jdbcType=VARCHAR}, #{acno,jdbcType=VARCHAR}, ",
        "#{ownerid,jdbcType=CHAR}, #{ownername,jdbcType=VARCHAR}, ",
        "#{amount,jdbcType=NUMERIC}, #{trantype,jdbcType=CHAR}, #{outflowno,jdbcType=VARCHAR}, ",
        "#{fromsysid,jdbcType=VARCHAR}, #{ccy,jdbcType=CHAR}, #{stat,jdbcType=CHAR}, ",
        "#{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, ",
        "#{remark,jdbcType=VARCHAR})"
    })
    int insert(AcFlow record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ac_flow
     *
     * @mbggenerated
     */
    @InsertProvider(type=AcFlowSqlProvider.class, method="insertSelective")
    int insertSelective(AcFlow record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ac_flow
     *
     * @mbggenerated
     */
    @SelectProvider(type=AcFlowSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="platflow", property="platflow", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="acno", property="acno", jdbcType=JdbcType.VARCHAR),
        @Result(column="ownerid", property="ownerid", jdbcType=JdbcType.CHAR),
        @Result(column="ownername", property="ownername", jdbcType=JdbcType.VARCHAR),
        @Result(column="amount", property="amount", jdbcType=JdbcType.NUMERIC),
        @Result(column="trantype", property="trantype", jdbcType=JdbcType.CHAR),
        @Result(column="outflowno", property="outflowno", jdbcType=JdbcType.VARCHAR),
        @Result(column="fromsysid", property="fromsysid", jdbcType=JdbcType.VARCHAR),
        @Result(column="ccy", property="ccy", jdbcType=JdbcType.CHAR),
        @Result(column="stat", property="stat", jdbcType=JdbcType.CHAR),
        @Result(column="createtime", property="createtime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updatetime", property="updatetime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR)
    })
    List<AcFlow> selectByExample(AcFlowExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ac_flow
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "platflow, acno, ownerid, ownername, amount, trantype, outflowno, fromsysid, ",
        "ccy, stat, createtime, updatetime, remark",
        "from ac_flow",
        "where platflow = #{platflow,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="platflow", property="platflow", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="acno", property="acno", jdbcType=JdbcType.VARCHAR),
        @Result(column="ownerid", property="ownerid", jdbcType=JdbcType.CHAR),
        @Result(column="ownername", property="ownername", jdbcType=JdbcType.VARCHAR),
        @Result(column="amount", property="amount", jdbcType=JdbcType.NUMERIC),
        @Result(column="trantype", property="trantype", jdbcType=JdbcType.CHAR),
        @Result(column="outflowno", property="outflowno", jdbcType=JdbcType.VARCHAR),
        @Result(column="fromsysid", property="fromsysid", jdbcType=JdbcType.VARCHAR),
        @Result(column="ccy", property="ccy", jdbcType=JdbcType.CHAR),
        @Result(column="stat", property="stat", jdbcType=JdbcType.CHAR),
        @Result(column="createtime", property="createtime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updatetime", property="updatetime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR)
    })
    AcFlow selectByPrimaryKey(String platflow);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ac_flow
     *
     * @mbggenerated
     */
    @UpdateProvider(type=AcFlowSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") AcFlow record, @Param("example") AcFlowExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ac_flow
     *
     * @mbggenerated
     */
    @UpdateProvider(type=AcFlowSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") AcFlow record, @Param("example") AcFlowExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ac_flow
     *
     * @mbggenerated
     */
    @UpdateProvider(type=AcFlowSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(AcFlow record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ac_flow
     *
     * @mbggenerated
     */
    @Update({
        "update ac_flow",
        "set acno = #{acno,jdbcType=VARCHAR},",
          "ownerid = #{ownerid,jdbcType=CHAR},",
          "ownername = #{ownername,jdbcType=VARCHAR},",
          "amount = #{amount,jdbcType=NUMERIC},",
          "trantype = #{trantype,jdbcType=CHAR},",
          "outflowno = #{outflowno,jdbcType=VARCHAR},",
          "fromsysid = #{fromsysid,jdbcType=VARCHAR},",
          "ccy = #{ccy,jdbcType=CHAR},",
          "stat = #{stat,jdbcType=CHAR},",
          "createtime = #{createtime,jdbcType=TIMESTAMP},",
          "updatetime = #{updatetime,jdbcType=TIMESTAMP},",
          "remark = #{remark,jdbcType=VARCHAR}",
        "where platflow = #{platflow,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(AcFlow record);
}