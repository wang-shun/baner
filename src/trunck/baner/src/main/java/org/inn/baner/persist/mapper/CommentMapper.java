package org.inn.baner.persist.mapper;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;
import org.inn.baner.bean.Comment;
import org.inn.baner.bean.CommentExample;

public interface CommentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated
     */
    @SelectProvider(type=CommentSqlProvider.class, method="countByExample")
    long countByExample(CommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated
     */
    @DeleteProvider(type=CommentSqlProvider.class, method="deleteByExample")
    int deleteByExample(CommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated
     */
    @Delete({
        "delete from comment",
        "where commentid = #{commentid,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String commentid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated
     */
    @Insert({
        "insert into comment (commentid, postid, ",
        "creatormobileno, parentcommentid, ",
        "createtime, context)",
        "values (#{commentid,jdbcType=VARCHAR}, #{postid,jdbcType=VARCHAR}, ",
        "#{creatormobileno,jdbcType=VARCHAR}, #{parentcommentid,jdbcType=VARCHAR}, ",
        "#{createtime,jdbcType=TIMESTAMP}, #{context,jdbcType=LONGVARBINARY})"
    })
    int insert(Comment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated
     */
    @InsertProvider(type=CommentSqlProvider.class, method="insertSelective")
    int insertSelective(Comment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated
     */
    @SelectProvider(type=CommentSqlProvider.class, method="selectByExampleWithBLOBs")
    @Results({
        @Result(column="commentid", property="commentid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="postid", property="postid", jdbcType=JdbcType.VARCHAR),
        @Result(column="creatormobileno", property="creatormobileno", jdbcType=JdbcType.VARCHAR),
        @Result(column="parentcommentid", property="parentcommentid", jdbcType=JdbcType.VARCHAR),
        @Result(column="createtime", property="createtime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="context", property="context", jdbcType=JdbcType.LONGVARBINARY)
    })
    List<Comment> selectByExampleWithBLOBsWithRowbounds(CommentExample example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated
     */
    @SelectProvider(type=CommentSqlProvider.class, method="selectByExampleWithBLOBs")
    @Results({
        @Result(column="commentid", property="commentid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="postid", property="postid", jdbcType=JdbcType.VARCHAR),
        @Result(column="creatormobileno", property="creatormobileno", jdbcType=JdbcType.VARCHAR),
        @Result(column="parentcommentid", property="parentcommentid", jdbcType=JdbcType.VARCHAR),
        @Result(column="createtime", property="createtime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="context", property="context", jdbcType=JdbcType.LONGVARBINARY)
    })
    List<Comment> selectByExampleWithBLOBs(CommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated
     */
    @SelectProvider(type=CommentSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="commentid", property="commentid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="postid", property="postid", jdbcType=JdbcType.VARCHAR),
        @Result(column="creatormobileno", property="creatormobileno", jdbcType=JdbcType.VARCHAR),
        @Result(column="parentcommentid", property="parentcommentid", jdbcType=JdbcType.VARCHAR),
        @Result(column="createtime", property="createtime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<Comment> selectByExampleWithRowbounds(CommentExample example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated
     */
    @SelectProvider(type=CommentSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="commentid", property="commentid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="postid", property="postid", jdbcType=JdbcType.VARCHAR),
        @Result(column="creatormobileno", property="creatormobileno", jdbcType=JdbcType.VARCHAR),
        @Result(column="parentcommentid", property="parentcommentid", jdbcType=JdbcType.VARCHAR),
        @Result(column="createtime", property="createtime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<Comment> selectByExample(CommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "commentid, postid, creatormobileno, parentcommentid, createtime, context",
        "from comment",
        "where commentid = #{commentid,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="commentid", property="commentid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="postid", property="postid", jdbcType=JdbcType.VARCHAR),
        @Result(column="creatormobileno", property="creatormobileno", jdbcType=JdbcType.VARCHAR),
        @Result(column="parentcommentid", property="parentcommentid", jdbcType=JdbcType.VARCHAR),
        @Result(column="createtime", property="createtime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="context", property="context", jdbcType=JdbcType.LONGVARBINARY)
    })
    Comment selectByPrimaryKey(String commentid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated
     */
    @UpdateProvider(type=CommentSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Comment record, @Param("example") CommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated
     */
    @UpdateProvider(type=CommentSqlProvider.class, method="updateByExampleWithBLOBs")
    int updateByExampleWithBLOBs(@Param("record") Comment record, @Param("example") CommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated
     */
    @UpdateProvider(type=CommentSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Comment record, @Param("example") CommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated
     */
    @UpdateProvider(type=CommentSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Comment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated
     */
    @Update({
        "update comment",
        "set postid = #{postid,jdbcType=VARCHAR},",
          "creatormobileno = #{creatormobileno,jdbcType=VARCHAR},",
          "parentcommentid = #{parentcommentid,jdbcType=VARCHAR},",
          "createtime = #{createtime,jdbcType=TIMESTAMP},",
          "context = #{context,jdbcType=LONGVARBINARY}",
        "where commentid = #{commentid,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKeyWithBLOBs(Comment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated
     */
    @Update({
        "update comment",
        "set postid = #{postid,jdbcType=VARCHAR},",
          "creatormobileno = #{creatormobileno,jdbcType=VARCHAR},",
          "parentcommentid = #{parentcommentid,jdbcType=VARCHAR},",
          "createtime = #{createtime,jdbcType=TIMESTAMP}",
        "where commentid = #{commentid,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Comment record);
}