package org.inn.baner.persist.mapper;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import org.inn.baner.bean.Mer;
import org.inn.baner.bean.MerExample;

public interface MerMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mer
     *
     * @mbggenerated
     */
    @SelectProvider(type=MerSqlProvider.class, method="countByExample")
    int countByExample(MerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mer
     *
     * @mbggenerated
     */
    @DeleteProvider(type=MerSqlProvider.class, method="deleteByExample")
    int deleteByExample(MerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mer
     *
     * @mbggenerated
     */
    @Delete({
        "delete from mer",
        "where merno = #{merno,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String merno);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mer
     *
     * @mbggenerated
     */
    @Insert({
        "insert into mer (merno, name, ",
        "mertype, superidno, ",
        "address, createtime, ",
        "updatetime, remark)",
        "values (#{merno,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, ",
        "#{mertype,jdbcType=CHAR}, #{superidno,jdbcType=VARCHAR}, ",
        "#{address,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, ",
        "#{updatetime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR})"
    })
    int insert(Mer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mer
     *
     * @mbggenerated
     */
    @InsertProvider(type=MerSqlProvider.class, method="insertSelective")
    int insertSelective(Mer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mer
     *
     * @mbggenerated
     */
    @SelectProvider(type=MerSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="merno", property="merno", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="mertype", property="mertype", jdbcType=JdbcType.CHAR),
        @Result(column="superidno", property="superidno", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="createtime", property="createtime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updatetime", property="updatetime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR)
    })
    List<Mer> selectByExample(MerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mer
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "merno, name, mertype, superidno, address, createtime, updatetime, remark",
        "from mer",
        "where merno = #{merno,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="merno", property="merno", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="mertype", property="mertype", jdbcType=JdbcType.CHAR),
        @Result(column="superidno", property="superidno", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="createtime", property="createtime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updatetime", property="updatetime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR)
    })
    Mer selectByPrimaryKey(String merno);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mer
     *
     * @mbggenerated
     */
    @UpdateProvider(type=MerSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Mer record, @Param("example") MerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mer
     *
     * @mbggenerated
     */
    @UpdateProvider(type=MerSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Mer record, @Param("example") MerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mer
     *
     * @mbggenerated
     */
    @UpdateProvider(type=MerSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Mer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mer
     *
     * @mbggenerated
     */
    @Update({
        "update mer",
        "set name = #{name,jdbcType=VARCHAR},",
          "mertype = #{mertype,jdbcType=CHAR},",
          "superidno = #{superidno,jdbcType=VARCHAR},",
          "address = #{address,jdbcType=VARCHAR},",
          "createtime = #{createtime,jdbcType=TIMESTAMP},",
          "updatetime = #{updatetime,jdbcType=TIMESTAMP},",
          "remark = #{remark,jdbcType=VARCHAR}",
        "where merno = #{merno,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Mer record);
}